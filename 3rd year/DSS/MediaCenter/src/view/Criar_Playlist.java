package view;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import MVC.View;

import javax.swing.*;
import java.io.*;
import java.net.Socket;

/**
 *
 * @author xaLuG
 */
public class Criar_Playlist extends javax.swing.JFrame implements View {

    /**
     * Creates new form Criar_Playlist
     */
    public Criar_Playlist(Socket s) {
        initComponents();
        this.socket=s;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        artista = new javax.swing.JFormattedTextField();
        jComboBox1 = new javax.swing.JComboBox();
        confirm1 = new javax.swing.JButton();
        nomePlaylist = new javax.swing.JLabel();
        playlist = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+ File.separator
                +"src"+File.separator+"view"+File.separator+"icons"+File.separator+"mediacenter.png")); // NOI18N

        back.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+ File.separator
                +"src"+File.separator+"view"+File.separator+"icons"+File.separator+"back.png")); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Género");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Artista");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione Categoria>", "Blues", "Classical", "Country", "Eletro", "Fado", "Funk", "Hip Hop", "Indie", "Jazz", "Kizomba", "Latin", "Metal", "Pop", "R&B", "Rap", "Reggae", "Rock", "Sertanejo" }));
        jComboBox1.setAlignmentX(5.0F);

        confirm1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        confirm1.setText("OK");
        confirm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm1ActionPerformed(evt);
            }
        });

        nomePlaylist.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomePlaylist.setText("Playlist");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(back)
                        .addGap(86, 86, 86)
                        .addComponent(confirm1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(nomePlaylist))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(artista)
                                    .addComponent(jComboBox1, 0, 170, Short.MAX_VALUE)
                                    .addComponent(playlist))))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomePlaylist)
                    .addComponent(playlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(artista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back)
                    .addComponent(confirm1))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new Menu_playlist(this.socket).run();
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_backActionPerformed

    private void confirm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm1ActionPerformed
        String campo,args;
        if (this.playlist.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Indique um nome para a playlist!");
            return;
        }
        String nome=this.playlist.getText();
        if (this.artista.getText().equals("") && this.jComboBox1.getSelectedItem().equals("<Selecione Categoria>")){
            args="20";
            campo="Aleatoria";
        }
        if (!this.artista.getText().equals("") && !this.jComboBox1.getSelectedItem().equals("<Selecione Categoria>")){
            JOptionPane.showMessageDialog(this, "Indique apenas um campo!");
            return;
        }
        else{
            if (this.artista.getText().equals("")){
                args= (String) this.jComboBox1.getSelectedItem();
                campo="Genero";
            }
            else{
                args=this.artista.getText();
                campo="Artista";
            }
        }
        try {
            PrintWriter pw = new PrintWriter(this.socket.getOutputStream());
            pw.println("criarPlaylist?Musica?"+campo+"?"+args+"?"+nome);
            pw.flush();
            BufferedReader br = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));
            String res = br.readLine();
            if (!res.equals("Sucesso")){
                JOptionPane.showMessageDialog(this, res);
                return;
            }
        }
        catch (IOException e){
            JOptionPane.showMessageDialog(this, "Erro de conexão");
            return;
        }
        new Menu_playlist(this.socket).run();
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_confirm1ActionPerformed


    public void run() {
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }


    private Socket socket;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField artista;
    private javax.swing.JButton back;
    private javax.swing.JButton confirm1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel nomePlaylist;
    private javax.swing.JFormattedTextField playlist;
    // End of variables declaration//GEN-END:variables
}
