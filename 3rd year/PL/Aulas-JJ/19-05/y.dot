// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "compiler.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . axioma $end\l"]
  0 -> 1 [style=solid label="INT"]
  0 -> 2 [style=solid label="ESCREVER"]
  0 -> 3 [style=solid label="VAR"]
  0 -> 4 [style=dashed label="axioma"]
  0 -> 5 [style=dashed label="prog"]
  0 -> 6 [style=dashed label="state"]
  0 -> 7 [style=dashed label="decla"]
  1 [label="State 1\n\l  7 decla: INT . VAR ';'\l"]
  1 -> 8 [style=solid label="VAR"]
  2 [label="State 2\n\l  6 state: ESCREVER . VAR ';'\l"]
  2 -> 9 [style=solid label="VAR"]
  3 [label="State 3\n\l  5 state: VAR . '=' exp ';'\l"]
  3 -> 10 [style=solid label="'='"]
  4 [label="State 4\n\l  0 $accept: axioma . $end\l"]
  4 -> 11 [style=solid label="$end"]
  5 [label="State 5\n\l  1 axioma: prog .\l  2 prog: prog . state\l"]
  5 -> 1 [style=solid label="INT"]
  5 -> 2 [style=solid label="ESCREVER"]
  5 -> 3 [style=solid label="VAR"]
  5 -> 12 [style=dashed label="state"]
  5 -> 7 [style=dashed label="decla"]
  5 -> "5R1" [style=solid]
 "5R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  3 prog: state .\l"]
  6 -> "6R3" [style=solid]
 "6R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  4 state: decla .\l"]
  7 -> "7R4" [style=solid]
 "7R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  7 decla: INT VAR . ';'\l"]
  8 -> 13 [style=solid label="';'"]
  9 [label="State 9\n\l  6 state: ESCREVER VAR . ';'\l"]
  9 -> 14 [style=solid label="';'"]
  10 [label="State 10\n\l  5 state: VAR '=' . exp ';'\l"]
  10 -> 15 [style=solid label="LER"]
  10 -> 16 [style=solid label="VAR"]
  10 -> 17 [style=solid label="NUM"]
  10 -> 18 [style=dashed label="exp"]
  11 [label="State 11\n\l  0 $accept: axioma $end .\l"]
  11 -> "11R0" [style=solid]
 "11R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  12 [label="State 12\n\l  2 prog: prog state .\l"]
  12 -> "12R2" [style=solid]
 "12R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  7 decla: INT VAR ';' .\l"]
  13 -> "13R7" [style=solid]
 "13R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l  6 state: ESCREVER VAR ';' .\l"]
  14 -> "14R6" [style=solid]
 "14R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 10 exp: LER .\l"]
  15 -> "15R10" [style=solid]
 "15R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l  9 exp: VAR .\l"]
  16 -> "16R9" [style=solid]
 "16R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  8 exp: NUM .\l"]
  17 -> "17R8" [style=solid]
 "17R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  5 state: VAR '=' exp . ';'\l 11 exp: exp . '+' exp\l"]
  18 -> 19 [style=solid label="';'"]
  18 -> 20 [style=solid label="'+'"]
  19 [label="State 19\n\l  5 state: VAR '=' exp ';' .\l"]
  19 -> "19R5" [style=solid]
 "19R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 11 exp: exp '+' . exp\l"]
  20 -> 15 [style=solid label="LER"]
  20 -> 16 [style=solid label="VAR"]
  20 -> 17 [style=solid label="NUM"]
  20 -> 21 [style=dashed label="exp"]
  21 [label="State 21\n\l 11 exp: exp . '+' exp\l 11    | exp '+' exp .\l"]
  21 -> 20 [style=solid label="'+'"]
  21 -> "21R11d" [label="['+']", style=solid]
 "21R11d" [label="R11", fillcolor=5, shape=diamond, style=filled]
  21 -> "21R11" [style=solid]
 "21R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
}
